* {
    font-family: 'Roboto Condensed', Arial, sans-serif;
    box-sizing: border-box;
}

.container {
    width: 1200px; /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). Ширина не включает толщину границ вокруг элемента, значение отступов и полей.Браузеры неодинаково работают с шириной, результат отображения зависит от используемого <!DOCTYPE>. В табл. 1 приведены возможные варианты <!DOCTYPE> и получаемая ширина.*/
    margin: 0 auto; /* Устанавливает величину отступа от каждого края элемента. Отступом является пространство от границы текущего элемента до внутренней границы его родительского элемента */
}

.page-wrapper {
    margin-top: 280px; /* Устанавливает величину отступа от верхнего края элемента. Отступом является расстояние от внешнего края верхней границы текущего элемента до внутренней границы его родительского элемента */
}

img {
    max-width: 100%; /*Устанавливает максимальную ширину элемента*/
}

html {
    background-image: url(./../images/witcher-crop.jpg); /*Устанавливает фоновое изображение для элемента*/
    background-repeat: no-repeat; /*Определяет, как будет повторяться фоновое изображение, установленное с помощью свойства background-image*/

}


html, body {
    padding: 0; /*Устанавливает значение полей вокруг содержимого элемента*/
    margin: 0; /* Устанавливает величину отступа от каждого края элемента. Отступом является пространство от границы текущего элемента до внутренней границы его родительского элемента */
}

a {
    display: inline-block; /*Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе.*/
}

/* Primary-menu*/

html {
    background-color: #2C1F03; /*Определяет цвет фона элемента*/
}

body {
    background-image: url("./../images/foter.jpg"); /*Устанавливает фоновое изображение для элемента*/
    background-repeat: no-repeat; /*Определяет, как будет повторяться фоновое изображение, установленное с помощью свойства background-image*/
    background-position: bottom; /*Задает начальное положение фонового изображения, установленного с помощью свойства background-image*/
    background-size: 100%; /*Масштабирует фоновое изображение согласно заданным размерам.*/
}

.primary-menu {
    background: #6C6767; /*Универсальное свойство background позволяет установить одновременно до пяти характеристик фона*/
    height: 75px; /*Устанавливает высоту блочных или заменяемых элементов*/
    width: 50%; /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). Ширина не включает толщину границ вокруг элемента, значение отступов и полей.Браузеры неодинаково работают с шириной, результат отображения зависит от используемого <!DOCTYPE>. В табл. 1 приведены возможные варианты <!DOCTYPE> и получаемая ширина.*/
    margin: 0 auto; /* Устанавливает величину отступа от каждого края элемента. Отступом является пространство от границы текущего элемента до внутренней границы его родительского элемента */
    position: relative; /*Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице.*/
}

.primary-menu::before {
    content: ""; /*Свойство content позволяет вставлять генерируемое содержание в текст веб-страницы, которое первоначально в тексте отсутствует*/
    position: absolute; /*Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице.*/
    top: -1px; /*Для позиционированного элемента определяет расстояние от верхнего края родительского элемента до верхнего края дочернего элемента*/
    left: -76px; /*Для позиционированного элемента определяет расстояние от левого края родительского элемента, не включая отступ, поле и ширину рамки, до левого края дочернего элемента*/
    border: 38px solid transparent; /*Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента.*/
    border-right-color: #6C6767; /*Устанавливает цвет границы справа от элемента.*/
    border-bottom-color: #6C6767; /*Устанавливает цвет границы внизу элемента.*/
}

.primary-menu::after {
    content: ""; /*Свойство content позволяет вставлять генерируемое содержание в текст веб-страницы, которое первоначально в тексте отсутствует*/
    position: absolute; /*Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице.*/
    top: -1px; /*Для позиционированного элемента определяет расстояние от верхнего края родительского элемента до верхнего края дочернего элемента*/
    right: -76px; /*Для позиционированного элемента определяет расстояние от правого края родительского элемента, не включая отступ, поле и ширину рамки, до правого края дочернего элемента*/
    border: 38px solid transparent; /*Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента.*/
    border-left-color: #6C6767; /*Задает цвет границы слева от элемента.*/
    border-bottom-color: #6C6767; /*Устанавливает цвет границы внизу элемента.*/
}

.primary-menu > ul {
    padding: 0; /*Устанавливает значение полей вокруг содержимого элемента*/
    margin: 0; /* Устанавливает величину отступа от каждого края элемента. Отступом является пространство от границы текущего элемента до внутренней границы его родительского элемента */
    font-size: 0; /*Определяет размер шрифта элемента*/
    overflow: hidden; /*Свойство overflow управляет отображением содержания блочного элемента, если оно целиком не помещается и выходит за область заданных размеров.*/
    text-align: center; /*Определяет горизонтальное выравнивание текста в пределах элемента.*/
}

.primary-menu > ul > li {
    display: inline-block; /*Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе.*/
    list-style: none; /*Универсальное свойство, позволяющее одновременно задать стиль маркера, его положение, а также изображение, которое будет использоваться в качестве маркера.*/
    font-size: 16px; /*Определяет размер шрифта элемента*/
}

.primary-menu > ul > li:last-child {
    margin-right: 0; /*Устанавливает величину отступа от правого края элемента*/
}

.primary-menu > ul > li a {
    color: #ffffff; /*Определяет цвет текста элемента.*/
    text-decoration: none; /*Добавляет оформление текста в виде его подчеркивания, перечеркивания, линии над текстом и мигания. Одновременно можно применить более одного стиля, перечисляя значения через пробел.*/
    height: 75px;  /*Устанавливает высоту блочных или заменяемых элементов*/
    line-height: 75px; /*Устанавливает интерлиньяж (межстрочный интервал) текста, отсчет ведется от базовой линии шрифта*/
    padding: 0 15px; /*Устанавливает значение полей вокруг содержимого элемента*/
    position: relative; /*Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице.*/
    z-index: 999; /*Любые позиционированные элементы на веб-странице могут накладываться друг на друга в определенном порядке, имитируя тем самым третье измерение, перпендикулярное экрану*/
}

.primary-menu > ul > li a:hover {
    color: #333333; /*Определяет цвет текста элемента.*/
}

.primary-menu > ul > li a:hover::before {
    content: " "; /*Свойство content позволяет вставлять генерируемое содержание в текст веб-страницы, которое первоначально в тексте отсутствует*/
    position: absolute; /*Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице.*/
    left: -5px; /*Для позиционированного элемента определяет расстояние от левого края родительского элемента, не включая отступ, поле и ширину рамки, до левого края дочернего элемента*/
    top: -25px; /*Для позиционированного элемента определяет расстояние от верхнего края родительского элемента до верхнего края дочернего элемента*/
    width: 100%; /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). Ширина не включает толщину границ вокруг элемента, значение отступов и полей.Браузеры неодинаково работают с шириной, результат отображения зависит от используемого <!DOCTYPE>. В табл. 1 приведены возможные варианты <!DOCTYPE> и получаемая ширина.*/
    height: 150%;  /*Устанавливает высоту блочных или заменяемых элементов*/
    transform: rotate(13deg); /*Трансформирует элемент, в частности, позволяет его масштабировать, вращать, сдвигать, наклонять, а также комбинировать виды трансформаций.*/
    background-color: #ffffff; /*Определяет цвет фона элемента*/
    z-index: -1; /*Любые позиционированные элементы на веб-странице могут накладываться друг на друга в определенном порядке, имитируя тем самым третье измерение, перпендикулярное экрану*/
}

.primary-menu > ul > li a:hover::before {
    opacity: 1;
}

/* Secondary-menu*/

.secondary-menu {
    background: #2B3F4A; /*Универсальное свойство background позволяет установить одновременно до пяти характеристик фона*/
    height: 95px;  /*Устанавливает высоту блочных или заменяемых элементов*/
    width: 100%; /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). Ширина не включает толщину границ вокруг элемента, значение отступов и полей.Браузеры неодинаково работают с шириной, результат отображения зависит от используемого <!DOCTYPE>. В табл. 1 приведены возможные варианты <!DOCTYPE> и получаемая ширина.*/
    margin: 0 auto; /* Устанавливает величину отступа от каждого края элемента. Отступом является пространство от границы текущего элемента до внутренней границы его родительского элемента */
    line-height: 75px; /*Устанавливает интерлиньяж (межстрочный интервал) текста, отсчет ведется от базовой линии шрифта*/
    padding: 0 50px; /*Устанавливает значение полей вокруг содержимого элемента*/
    text-align: center; /*Определяет горизонтальное выравнивание текста в пределах элемента.*/
}

.secondary-menu > ul {
    padding: 0; /*Устанавливает значение полей вокруг содержимого элемента*/
    margin: 0; /* Устанавливает величину отступа от каждого края элемента. Отступом является пространство от границы текущего элемента до внутренней границы его родительского элемента */
    display: inline-block; /*Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе.*/
    line-height: 100px; /*Устанавливает интерлиньяж (межстрочный интервал) текста, отсчет ведется от базовой линии шрифта*/
}

.secondary-menu > ul > li {
    display: inline-block; /*Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе.*/
    list-style: none; /*Универсальное свойство, позволяющее одновременно задать стиль маркера, его положение, а также изображение, которое будет использоваться в качестве маркера.*/
    margin-right: 20px; /*Устанавливает величину отступа от правого края элемента*/

}

.secondary-menu > ul > li a {
    color: #ffffff; /*Определяет цвет текста элемента.*/
    text-decoration: none; /*Добавляет оформление текста в виде его подчеркивания, перечеркивания, линии над текстом и мигания. Одновременно можно применить более одного стиля, перечисляя значения через пробел.*/
    height: 75px;  /*Устанавливает высоту блочных или заменяемых элементов*/
    line-height: 75px; /*Устанавливает интерлиньяж (межстрочный интервал) текста, отсчет ведется от базовой линии шрифта*/
    padding: 0; /*Устанавливает значение полей вокруг содержимого элемента*/
}

.secondary-menu > ul > li > a:hover {
    color: #6C6767; /*Определяет цвет текста элемента.*/

}

.secondary-menu > ul > .logo {
    width: 175px; /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). Ширина не включает толщину границ вокруг элемента, значение отступов и полей.Браузеры неодинаково работают с шириной, результат отображения зависит от используемого <!DOCTYPE>. В табл. 1 приведены возможные варианты <!DOCTYPE> и получаемая ширина.*/
    position: relative; /*Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице.*/
}

.secondary-menu > ul > .logo > img {
    position: absolute; /*Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице.*/
    left: 0; /*Для позиционированного элемента определяет расстояние от левого края родительского элемента, не включая отступ, поле и ширину рамки, до левого края дочернего элемента*/
    top: -40px; /*Для позиционированного элемента определяет расстояние от верхнего края родительского элемента до верхнего края дочернего элемента*/
}

/* Content*/

.content-wrapper {
    background-color: #ffffff; /*Определяет цвет фона элемента*/
}

.content, .sidebar {
    float: left;
    padding: 40px; /*Устанавливает значение полей вокруг содержимого элемента*/
}

.content {
    width: 75%; /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). Ширина не включает толщину границ вокруг элемента, значение отступов и полей.Браузеры неодинаково работают с шириной, результат отображения зависит от используемого <!DOCTYPE>. В табл. 1 приведены возможные варианты <!DOCTYPE> и получаемая ширина.*/
}

.sidebar {
    width: 25%; /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). Ширина не включает толщину границ вокруг элемента, значение отступов и полей.Браузеры неодинаково работают с шириной, результат отображения зависит от используемого <!DOCTYPE>. В табл. 1 приведены возможные варианты <!DOCTYPE> и получаемая ширина.*/
    float: left;
}

.clear {
    clear: both;
}

footer {
    background-color: #2B3F4A; /*Определяет цвет фона элемента*/
    padding: 40px; /*Устанавливает значение полей вокруг содержимого элемента*/
    color: #ffffff; /*Определяет цвет текста элемента.*/
}

.footer {
    padding-bottom: 300px;
}
